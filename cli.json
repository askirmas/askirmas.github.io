{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "oneOf": [
    {
      "required": ["docker-compose"],
      "properties": {
        "ENV": {"$ref": "#/definitions/docker-compose/definitions/env"},
        "docker-compose": {"$ref": "#/definitions/docker-compose"}
      },
      "examples": [
        {
          "ENV": {
            "DOCKER_BUILDKIT": 1
          },
          "docker-compose": {
          }
        }
      ]
    }
  ],
  "definitions": {
    "docker-compose": {
      "description": "Define and run multi-container applications with Docker.",
      "title": "https://docs.docker.com/compose/reference/",
      "type": "array",
      "oneOf": [
        {
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {"$ref": "#/definitions/docker-compose/definitions/options"},
            {"$ref": "#/definitions/docker-compose/definitions/commands"}
          ]
        },
        {
          "minItems": 1,
          "maxItems": 1,
          "items": [
            {"$ref": "#/definitions/docker-compose/definitions/commands"}
          ]
        }
      ],
      "definitions": {
        "env": {
          "description": "Variables starting with `DOCKER_` are the same as those used to configure the Docker command-line client. If you’re using docker-machine, then the `eval \"$(docker-machine env my-docker-vm)\"` command should set them to their correct values.",
          "title": "https://docs.docker.com/compose/reference/envvars/",
          "type": "object",
          "properties": {
            "COMPOSE_API_VERSION": {
              "title": "https://docs.docker.com/compose/env-file/#compose-file-and-cli-variables",
              "type": "string"
            },
            "COMPOSE_FILE": {
              "description": "`COMPOSE_FILE=FILE1:FILE2: -f|--file FILE*` Specify an alternate compose file. If not provided, Compose looks for a file named `docker-compose.yml` in the current directory and then each parent directory in succession until a file by that name is found. Path separator on Linux and macOS is `:`, on Windows is `;`), can be customized using [`COMPOSE_PATH_SEPARATOR`.](https://docs.docker.com/compose/reference/envvars/#compose_path_separator)",
              "title": "https://docs.docker.com/compose/env-file/#compose-file-and-cli-variables",
              "type": "string",
              "default": "docker-compose.yml:docker-compose.override.yml",
              "examples": [
                "docker-compose.yml:docker-compose.prod.yml"
              ]
            },
            "COMPOSE_PATH_SEPARATOR": {
              "title": "https://docs.docker.com/compose/reference/envvars/#compose_path_separator"
            },
            "COMPOSE_CONVERT_WINDOWS_PATHS": {
              "title": "https://docs.docker.com/compose/env-file/#compose-file-and-cli-variables",
              "type": "string"
            },
            "COMPOSE_HTTP_TIMEOUT": {
              "title": "https://docs.docker.com/compose/env-file/#compose-file-and-cli-variables",
              "type": "string"
            },
            "COMPOSE_PROFILES": {
              "description": "`COMPOSE_PROFILES=NAME1,NAME2, --profile NAME1 NAME2 ` Specify one or multiple active profiles to enable. Calling `docker-compose up` with `COMPOSE_PROFILES=frontend` will start the services with the profile frontend and services **without specified profiles**. `COMPOSE_PROFILES=frontend,debug` will enable the profiles `frontend` and `debug`. See also [Using profiles with Compose](https://docs.docker.com/compose/profiles/) and the [`--profile` command-line option](https://docs.docker.com/compose/reference/#use---profile-to-specify-one-or-more-active-profiles).",
              "title": "https://docs.docker.com/compose/reference/envvars/#compose_profiles",
              "type": "string",
              "examples": [
                "frontend,debug"
              ]
            },
            "COMPOSE_PROJECT_NAME": {
              "title": "https://docs.docker.com/compose/env-file/#compose-file-and-cli-variables",
              "type": "string"
            },
            "COMPOSE_TLS_VERSION": {
              "title": "https://docs.docker.com/compose/env-file/#compose-file-and-cli-variables",
              "type": "string"
            },
            "DOCKER_CERT_PATH": {
              "title": "DOCKER_CERT_PATH",
              "type": "string",
              "format": "uri-reference",
              "default": "~/.docker."
            },
            "DOCKER_HOST": {
              "description": "Sets the URL of the `docker` daemon",
              "title": "https://docs.docker.com/compose/reference/envvars/#docker_host",
              "type": "string",
              "format": "uri",
              "default": "unix:///var/run/docker.sock"
            },
            "DOCKER_TLS_VERIFY": {
              "title": "https://docs.docker.com/compose/env-file/#compose-file-and-cli-variables",
              "type": "string"
            },
            "COMPOSE_IGNORE_ORPHANS": {
              "description": "If set, Compose doesn’t try to detect orphaned containers for the project",
              "title": "https://docs.docker.com/compose/reference/envvars/#compose_ignore_orphans",
              "enum": ["1", 1, "true", true, "0", 0, "false", false]
            },
            "COMPOSE_INTERACTIVE_NO_CLI": {
              "description": "If set, Compose doesn’t attempt to use the Docker CLI for interactive run and exec operations. This option is not available on Windows where the CLI is required for the aforementioned operations",
              "title": "https://docs.docker.com/compose/reference/envvars/#compose_interactive_no_cli",
              "enum": ["1", 1, "true", true, "0", 0, "false", false]
            },
            "COMPOSE_DOCKER_CLI_BUILD": {
              "description": "Configure whether to use the Compose python client for building images or the native docker cli. By default, Compose uses the `docker` CLI to perform builds, which allows you to use [BuildKit](https://docs.docker.com/develop/develop-images/build_enhancements/#to-enable-buildkit-builds) to perform builds. Set `COMPOSE_DOCKER_CLI_BUILD=0` to disable native builds, and to use the built-in python client.",
              "enum": ["0", 0]
            },
            "DOCKER_BUILDKIT": {
              "description": "Compose by default uses the `docker` CLI to perform builds (also known as “native build”). Compose can take advantage of features such as [`BuildKit`](https://docs.docker.com/develop/develop-images/build_enhancements/). BuildKit is enabled by default on Docker Desktop, but requires the `DOCKER_BUILDKIT=1` environment variable to be set on other platforms. Refer to the [Compose CLI environment variables](https://docs.docker.com/compose/reference/envvars/#compose_docker_cli_build) section to learn how to switch between “native build” and “compose build”.",
              "title": "https://docs.docker.com/compose/reference/build/",
              "const": 1
            }
          }
        },
        "options": {
          "description": "Opts are space delimited, i.e. `--file FILE`",
          "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help",
          "type": "object",
          "additionalProperties": false,
          "not": {"anyOf": [
            {"required": ["f", "file"]},
            {"required": ["p", "project-name"]},
            {"required": ["H", "host"]}
          ]},
          "properties": {
            "f": {"$ref": "#/definitions/docker-compose/definitions/options/properties/file"},
            "file": {
              "description": "`COMPOSE_FILE=FILE1:FILE2, -f|--file FILE*` Specify an alternate compose file. If not provided, Compose looks for a file named `docker-compose.yml` in the current directory and then each parent directory in succession until a file by that name is found",
              "default": ["(../)*docker-compose.yml", "($1)docker-compose.override.yml"],
              "examples": [
                "docker-compose.yml",
                ["docker-compose.yml", "-"],
                ["docker-compose.yml", "docker-compose.admin.yml"],
                ["docker-compose.yml", "docker-compose.stack.yml"]
              ],
              "oneOf": [
                {
                  "title": "https://docs.docker.com/compose/reference/#specifying-a-path-to-a-single-compose-file",
                  "description": "Specify a path to a Compose file that is not located in the current directory, either from the command line or by setting up a [`COMPOSE_FILE` environment variable](https://docs.docker.com/compose/reference/envvars/#compose_file) in your shell or in an environment file.",
                  "$ref": "#/definitions/docker-compose/definitions/options/properties/file/definitions/items"
                },
                {
                  "title": "https://docs.docker.com/compose/reference/#specifying-multiple-compose-files",
                  "type": "array",
                  "items": {
                    "description": "All paths in the files are relative to the first configuration file specified. You can use the `--project-directory` option to override this base path. `-` (dash) as the filename to read the configuration from `stdin`, all paths in the configuration are relative to the current working directory."
                  },
                  "$ref": "#/definitions/docker-compose/definitions/options/properties/file/definitions"
                }
              ],
              "definitions": {
                "items": {
                  "type": "string",
                  "format": "uri-reference"
                }
              }
            },
            "p": {"$ref": "#/definitions/docker-compose/definitions/options/properties/project-name"},
            "project-name": {
              "description": "`-p, --project-name NAME` Specify an alternate project name. See also the [`COMPOSE_PROJECT_NAME` environment variable.](https://docs.docker.com/compose/reference/envvars/#compose_project_name)",
              "title": "https://docs.docker.com/compose/reference/#use--p-to-specify-a-project-name",
              "default": "*directory name*",
              "type": "string"
            },
            "profile": {
              "title": "https://docs.docker.com/compose/reference/#use---profile-to-specify-one-or-more-active-profiles",
              "description": "`COMPOSE_PROFILES=NAME1,NAME2 --profile NAME1 NAME2 ` Specify a profile to enable. Calling `docker-compose --profile frontend up` will start the services with the profile `frontend` and services **without specified** profiles. You can also enable multiple profiles, e.g. with `docker-compose --profile frontend --profile debug up` the profiles `frontend` and `debug` will be enabled. See also [Using profiles with Compose](https://docs.docker.com/compose/profiles/) and the `COMPOSE_PROFILES` [environment variable](https://docs.docker.com/compose/reference/envvars/#compose_profiles).",
              "type": ["string", "array"],
              "items": {"type": "string"}
            },
            "verbose": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help",
              "description": "`--verbose` Show more output",
              "enum": [null, true]
            },
            "log-level": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help",
              "description": "`--log-level LEVEL` Set log level",
              "enum": ["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"]
            },
            "no-ansi": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help",
              "description": "`--no-ansi` Do not print ANSI control characters",
              "enum": [null, true]
            },
            "version": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help"
            },
            "H": {"$ref": "#/definitions/docker-compose/definitions/options/properties/host"},
            "host": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help",
              "description": "`-H, --host HOST` Daemon socket to connect to",
              "type": "string",
              "format": "hostname"
            },
            "tls": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help"
            },
            "tlscacert": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help"
            },
            "tlscert": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help"
            },
            "tlskey": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help"
            },
            "tlsverify": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help"
            },
            "skip-hostname-check  ": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help"
            },
            "project-directory": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help",
              "description": "`--project-directory PATH` Specify an alternate working directory",
              "type": "string",
              "format": "uri-reference",
              "default": "*the path of the Compose file*"
            },
            "compatibility": {
              "title": "https://docs.docker.com/compose/reference/#command-options-overview-and-help"
            }
          }
        },
        "commands": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "build": {
              "description": "`DOCKER_BUILDKIT=1 build [options] [--build-arg key=val...] [SERVICE...]` Build or rebuild services. Services are built once and then tagged, by default as `project_service`.  If the Compose file specifies an `image` name, the image is tagged with that name. If you change a service’s Dockerfile or the contents of its build directory, run `docker-compose build` to rebuild it.",
              "title": "https://docs.docker.com/compose/reference/build/",
              "type": "array",
              "oneOf": [
                {
                  "minItems": 1,
                  "items": {"$ref": "#/definitions/docker-compose/definitions/commands/properties/build/definitions/arguments"} 
                },
                {
                  "minItems": 2,
                  "items": [{"$ref": "#/definitions/docker-compose/definitions/commands/properties/build/definitions/options"}],
                  "additionalItems": {"$ref": "#/definitions/docker-compose/definitions/commands/properties/build/definitions/arguments"}
                }
              ],
              "definitions": {
                "arguments": {
                  "description": "Service",
                  "type": "string"
                },
                "options": {
                  "type": "object",
                  "description": "Options",
                  "title": "https://docs.docker.com/compose/reference/build/",
                  "additionalProperties": false,
                  "not": {
                    "anyOf": [
                      {"required": ["m", "memort"]},
                      {"required": ["q", "quiet"]}
                    ]
                  },
                  "properties": {
                    "build-arg": {
                      "description": "Set build-time variables for services.",
                      "title": "https://docs.docker.com/compose/reference/build/",
                      "oneOf": [
                        {"$ref": "#/definitions/docker-compose/definitions/commands/properties/build/definitions/options/properties/build-arg/definitions/items"},
                        {
                          "type": "array",
                          "$ref": "#/definitions/docker-compose/definitions/commands/properties/build/definitions/options/properties/build-arg/definitions"
                        }
                      ],
                      "definitions": {
                        "items": {
                          "type": "string",
                          "examples": [
                            "key=val"
                          ]
                        }
                      }
                    },
                    "compress": {
                      "description": "Compress the build context using gzip.",
                      "title": "https://docs.docker.com/compose/reference/build/",
                      "enum": [true, null]
                    },
                    "force-rm": {
                      "description": "Always remove intermediate containers.",
                      "title": "https://docs.docker.com/compose/reference/build/",
                      "enum": [true, null]
                    },
                    "m": {"$ref": "#/definitions/docker-compose/definitions/commands/properties/build/definitions/options/properties/memory"},
                    "memory": {
                      "description": "Set memory limit for the build container.",
                      "title": "https://docs.docker.com/compose/reference/build/"
                    },
                    "no-cache": {
                      "description": "Do not use cache when building the image.",
                      "title": "https://docs.docker.com/compose/reference/build/",
                      "enum": [true, null]
                    },
                    "no-rm": {
                      "description": "Do not remove intermediate containers after a successful build.",
                      "title": "https://docs.docker.com/compose/reference/build/",
                      "enum": [true, null]
                    },
                    "parallel": {
                      "description": "Build images in parallel.",
                      "title": "https://docs.docker.com/compose/reference/build/",
                      "enum": [true, null]
                    },
                    "progress": {
                      "description": "Set type of progress output (`auto`, `plain`, `tty`).",
                      "title": "https://docs.docker.com/compose/reference/build/",
                      "enum": ["auto", "plain", "tty"]
                    },
                    "pull": {
                      "description": "Always attempt to pull a newer version of the image.",
                      "title": "https://docs.docker.com/compose/reference/build/",
                      "enum": [true, null]
                    },
                    "q": {"$ref": "#/definitions/docker-compose/definitions/commands/properties/build/definitions/options/properties/quiet"},
                    "quiet": {
                      "description": "Don't print anything to `STDOUT`.",
                      "title": "https://docs.docker.com/compose/reference/build/",
                      "enum": [true, null]
                    }
                  }
                }
              }
            },
            "bundle": {
              "description": "Generate a Docker bundle from the Compose file"
            },
            "config": {
              "description": "Validate and view the Compose file"
            },
            "create": {
              "description": "Create services"
            },
            "down": {
              "description": "Stop and remove containers, networks, images, and volumes"
            },
            "events": {
              "description": "Receive real time events from containers"
            },
            "exec": {
              "description": "Execute a command in a running container"
            },
            "help": {
              "description": "Get help on a command"
            },
            "images": {
              "description": "List images"
            },
            "kill": {
              "description": "Kill containers"
            },
            "logs": {
              "description": "View output from containers"
            },
            "pause": {
              "description": "Pause services"
            },
            "port": {
              "description": "Print the public port for a port binding"
            },
            "ps": {
              "description": "List containers"
            },
            "pull": {
              "description": "Pull service images"
            },
            "push": {
              "description": "Push service images"
            },
            "restart": {
              "description": "Restart services"
            },
            "rm": {
              "description": "Remove stopped containers"
            },
            "run": {
              "description": "Run a one-off command"
            },
            "scale": {
              "description": "Set number of containers for a service"
            },
            "start": {
              "description": "Start services"
            },
            "stop": {
              "description": "Stop services"
            },
            "top": {
              "description": "Display the running processes"
            },
            "unpause": {
              "description": "Unpause services"
            },
            "up": {
              "description": "Create and start containers"
            },
            "version": {
              "description": "Show the Docker-Compose version information          "
            }
          }
        }
      }
    },
    "grep": {
      "type": "object",
      "definitions": {
        "options": {
          "quiet": {"const": true},
          "extended-regexp": {"const": true}
        }
      }
    },
    "git": {
      "type": "object",
      "definitions": {
        "commands": {
          "status": {},
          "branch": {},
          "diff": {},
          "config": {},
          "commit": {},
          "stash": {},
          "rev-parse": {}
        }
      }
    }
  }
}
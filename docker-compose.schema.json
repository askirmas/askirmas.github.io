{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://askirmas.github.io/docker-compose.schema.json",
  "type": "object",
  "description": "Compose Specification",
  "title": "The Compose file is a YAML file defining a multi-containers based application.",

  "properties": {
    "version": {
      "type": "string",
      "title": "Version of the Compose specification used. Tools not implementing required version MUST reject the configuration file."
    },

    "services": {
      "id": "#/properties/services",
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9._-]+$": {
          "$ref": "#/definitions/service"
        }
      },
      "additionalProperties": false
    },

    "networks": {
      "id": "#/properties/networks",
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9._-]+$": {
          "$ref": "#/definitions/network"
        }
      }
    },

    "volumes": {
      "id": "#/properties/volumes",
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9._-]+$": {
          "$ref": "#/definitions/volume"
        }
      },
      "additionalProperties": false
    },

    "secrets": {
      "id": "#/properties/secrets",
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9._-]+$": {
          "$ref": "#/definitions/secret"
        }
      },
      "additionalProperties": false
    },

    "configs": {
      "id": "#/properties/configs",
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9._-]+$": {
          "$ref": "#/definitions/config"
        }
      },
      "additionalProperties": false
    }
  },

  "patternProperties": {"^x-": {}},
  "additionalProperties": false,

  "definitions": {

    "service": {
      "id": "#/definitions/service",
      "type": "object",
      "anyOf": [
        {
          "required": ["build", "image"],
          "title": "`build: ./dir, image: webapp:tag` This results in an image named `webapp` and tagged `tag`, built from `./dir.`"
        },
        {"required": ["build"]},
        {"required": ["image"]}
      ],
      "properties": {
        "build": {
          "description": "The `build` option is ignored when [deploying a stack in swarm mode](https://docs.docker.com/engine/reference/commandline/stack_deploy/). The `docker stack` command does not build images before deploying.",
          "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#build",
          "type": ["string", "object"],
          "required": ["context"],
          "properties": {
            "context": {
              "description": "When the value supplied is a relative path, it is interpreted as relative to the location of the Compose file. This directory is also the build context that is sent to the Docker daemon.  Compose builds and tags it with a generated name, and uses that image thereafter.",
              "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#context",
              "type": "string",
              "format": "uri-reference"
            },
            "dockerfile": {"type": "string"},
            "args": {
              "description": "In your Dockerfile, if you specify ARG before the FROM instruction, ARG is not available in the build instructions under FROM. If you need an argument to be available in both places, also specify it under the FROM instruction. https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact",
              "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#args",
              "$ref": "#/definitions/list_or_dict",
              "examples": [
                {
                  "buildno": 1,
                  "gitcommithash": "cdc3b19"
                },
                [
                  "buildno=1",
                  "gitcommithash=cdc3b19"
                ]
              ]
            },
            "labels": {
              "$ref": "#/definitions/list_or_dict",
              "examples": [
                {
                  "com.example.description": "Accounting webapp",
                  "com.example.department": "Finance",
                  "com.example.label-with-empty-value": ""
                }
              ]
            },
            "cache_from": {"type": "array", "items": {"type": "string"}},
            "network": {
              "description": "Set the network containers connect to for the `RUN` instructions during build. Use `none` to disable networking during build",
              "type": "string",
              "examples": [
                "host",
                "custom_network_1",
                "none"
              ]
            },
            "target": {
              "description": "Build the specified stage as defined inside the `Dockerfile`. See the [multi-stage build docs](https://docs.docker.com/develop/develop-images/multistage-build/) for details.",
              "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#target",
              "type": "string"
            },
            "shm_size": {"type": ["integer", "string"]},
            "extra_hosts": {"$ref": "#/definitions/list_or_dict"},
            "isolation": {"type": "string"}
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}},
          "examples": [
            "./dir",
            {
              "context": "./dir",
              "dockerfile": "Dockerfile-alternate",
              "args": {
                "buildno": 1
              }
            }
          ]
        },
        "deploy": {"$ref": "#/definitions/deployment"},
        "blkio_config": {
          "type": "object",
          "properties": {
            "device_read_bps": {
              "type": "array",
              "items": {"$ref": "#/definitions/blkio_limit"}
            },
            "device_read_iops": {
              "type": "array",
              "items": {"$ref": "#/definitions/blkio_limit"}
            },
            "device_write_bps": {
              "type": "array",
              "items": {"$ref": "#/definitions/blkio_limit"}
            },
            "device_write_iops": {
              "type": "array",
              "items": {"$ref": "#/definitions/blkio_limit"}
            },
            "weight": {"type": "integer"},
            "weight_device": {
              "type": "array",
              "items": {"$ref": "#/definitions/blkio_weight"}
            }
          },
          "additionalProperties": false
        },
        "cap_add": {"type": "array", "items": {"type": "string"}, "uniqueItems": true},
        "cap_drop": {"type": "array", "items": {"type": "string"}, "uniqueItems": true},
        "cgroup_parent": {"type": "string"},
        "command": {
          "oneOf": [
            {"type": "string"},
            {"type": "array", "items": {"type": "string"}}
          ]
        },
        "configs": {
          "type": "array",
          "items": {
            "oneOf": [
              {"type": "string"},
              {
                "type": "object",
                "properties": {
                  "source": {"type": "string"},
                  "target": {"type": "string"},
                  "uid": {"type": "string"},
                  "gid": {"type": "string"},
                  "mode": {"type": "number"}
                },
                "additionalProperties": false,
                "patternProperties": {"^x-": {}}
              }
            ]
          }
        },
        "container_name": {
          "description": "Specify a custom container name, rather than a generated default name. Because Docker container names must be unique, you cannot scale a service beyond 1 container if you have specified a custom name. Attempting to do so results in an error.",
          "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#container_name",
          "type": "string",
          "examples": ["my-web-container"]
        },
        "depends_on": {
          "description": "There are several things to be aware of when using depends_on:     - depends_on does not wait for db and redis to be “ready” before starting web - only until they have been started. If you need to wait for a service to be ready, see [Controlling startup order](https://docs.docker.com/compose/startup-order/) for more on this problem and strategies for solving it.     - The depends_on option is ignored when deploying a stack in swarm mode with a version 3 Compose file.",
          "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#depends_on",
          "oneOf": [
            {"$ref": "#/definitions/list_of_strings"},
            {
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9._-]+$": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "condition": {
                      "type": "string",
                      "enum": ["service_started", "service_healthy", "service_completed_successfully"]
                    }
                  },
                  "required": ["condition"]
                }
              }
            }
          ]
        },
        "entrypoint": {
          "description": "Setting entrypoint both overrides any default entrypoint set on the service’s image with the ENTRYPOINT Dockerfile instruction, *and* clears out any default command on the image - meaning that if there’s a `CMD` instruction in the Dockerfile, it is ignored.",
          "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#entrypoint",
          "oneOf": [
            {"type": "string"},
            {"type": "array", "items": {"type": "string"}}
          ],
          "examples": [
            "/code/entrypoint.sh",
            ["php", "-d", "memory_limit=-1", "vendor/bin/phpunit"]
          ]
        },
        "env_file": {
          "description": "If you have specified a Compose file with `docker-compose -f FILE`, paths in `env_file` are relative to the directory that file is in. Environment variables declared in the [`environment`](https://docs.docker.com/compose/compose-file/compose-file-v3/#environment) section override these values – this holds true even if those values are empty or undefined. Compose expects each line in an env file to be in `VAR=VAL` format. If your service specifies a [build](https://docs.docker.com/compose/compose-file/compose-file-v3/#build) option, variables defined in environment files are not automatically visible during the build. Use the [`args`](https://docs.docker.com/compose/compose-file/compose-file-v3/#args) sub-option of `build` to define build-time environment variables. The files in the list are processed from the top down",
          "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#env_file",
          "$ref": "#/definitions/string_or_list"
        },

        "environment": {
          "description": "Any boolean values (true, false, yes, no) need to be enclosed in quotes to ensure they are not converted to True or False by the YML parser. If your service specifies a [`build`](https://docs.docker.com/compose/compose-file/compose-file-v3/#build) option, variables defined in `environment` are not automatically visible during the build. Use the [args](https://docs.docker.com/compose/compose-file/compose-file-v3/#args) sub-option of build to define build-time environment variables.",
          "$ref": "#/definitions/list_or_dict",
          "examples": [
            {
              "RACK_ENV": "development",
              "SHOW": "'true'",
              "SESSION_SECRET": null
            },
            [
              "RACK_ENV=development",
              "SHOW=true",
              "SESSION_SECRET"
            ]
          ]
        },

        "expose": {
          "description": "Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.",
          "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#expose",
          "type": "array",
          "items": {
            "type": ["string", "number"],
            "format": "expose"
          },
          "uniqueItems": true,
          "examples": [
            ["3000", "8000"]
          ]
        },
        "external_links": {
          "description": "Link to containers started outside this docker-compose.yml or even outside of Compose, especially for containers that provide shared or common services. Semantics when specifying both: `CONTAINER:ALIAS`. The externally-created containers must be connected to at least one of the same networks as the service that is linking to them. [Links](https://docs.docker.com/compose/compose-file/compose-file-v2/#links) are a legacy option. We recommend using [networks](https://docs.docker.com/compose/compose-file/compose-file-v3/#networks) instead. Option is ignored when [deploying a stack in swarm mode](https://docs.docker.com/engine/reference/commandline/stack_deploy/)",
          "type": "array",
          "items": {"type": "string"},
          "uniqueItems": true,
          "examples": [
            [
              "redis_1",
              "project_db_1:mysql",
              "project_db_1:postgresql"
            ]
          ]
        },
        "extra_hosts": {
          "description": "Add hostname mappings. Use the same values as the docker client `--add-host` parameter. An entry with the ip address and hostname is created in `/etc/hosts` inside containers for this service, `162.242.195.82  somehost \\n 50.31.209.229   otherhost`",
          "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#extra_hosts",
          "$ref": "#/definitions/list_or_dict",
          "examples": [
            [
              "somehost:162.242.195.82",
              "otherhost:50.31.209.229"
            ]
          ]
        },
        "healthcheck": {
          "description": "See the docs for the [HEALTHCHECK Dockerfile instruction](https://docs.docker.com/engine/reference/builder/#healthcheck) for details on how healthchecks work. To disable any default healthcheck set by the image, you can use `disable: true`. This is equivalent to specifying `test: [\"NONE\"]`.",
          "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck",
          "type": "object",
          "properties": {
            "disable": {"type": "boolean"},
            "interval": {"type": "string", "format": "duration"},
            "retries": {"type": "number"},
            "test": {
              "oneOf": [
                {
                  "description": "Equivalent to specifying `CMD-SHELL` followed by that string. Wrapped in `/bin/sh`",
                  "type": "string",
                  "examples": [
                    "curl -f https://localhost || exit 1"
                  ]
                },
                {
                  "type": "array",
                  "items": {"type": "string"},
                  "oneOf": [
                    {
                      "description": "Disable any default healthcheck set by the image",
                      "const": ["NONE"]
                    },
                    {
                      "description": "Wrapped in /bin/sh",
                      "minItems": 2,
                      "maxItems": 2,
                      "items": [
                        {"const": "CMD-SHELL"},
                        {"type": "string"}
                      ],
                      "examples": [
                        ["CMD-SHELL", "curl -f http://localhost || exit 1"]
                      ]
                    },
                    {
                      "minItems": 2,
                      "items": [{"const": "CMD"}],
                      "additionalItems": {"type": "string"},
                      "examples": [
                        ["CMD", "curl", "-f", "http://localhost"]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeout": {"type": "string", "format": "duration"},
            "start_period": {"type": "string", "format": "duration"}
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}},
          "examples": [
            {
              "test": ["CMD", "curl", "-f", "http://localhost"],
              "interval": "1m30s",
              "timeout": "10s",
              "retries": "3",
              "start_period": "40s"
            },
            {
              "test": ["NONE"]
            },
            {
              "disable": true
            }
          ]
        },
        "image": {
          "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#image",
          "description": "Can either be a repository/tag or a partial image ID. If the image does not exist, Compose attempts to pull it, unless you have also specified [build](https://docs.docker.com/compose/compose-file/compose-file-v3/#build), in which case it builds it using the specified options and tags it with the specified tag.",
          "type": "string",
          "examples": [
            "redis",
            "ubuntu:18.04",
            "tutum/influxdb",
            "example-registry.com:4000/postgresql",
            "a4bc65fd"
          ]
        },
        "init": {
          "title": "https://docs.docker.com/compose/compose-file/compose-file-v3/#init",
          "description": "Run an init inside the container that forwards signals and reaps processes. The default init binary that is used is [Tini](https://github.com/krallin/tini), and is installed in `/usr/libexec/docker-init` on the daemon host. You can configure the daemon to use a custom init binary through the [`init-path` configuration option.](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file)",
          "type": "boolean"
        },        
        "cpu_count": {"type": "integer", "minimum": 0},
        "cpu_percent": {"type": "integer", "minimum": 0, "maximum": 100},
        "cpu_shares": {"type": ["number", "string"]},
        "cpu_quota": {"type": ["number", "string"]},
        "cpu_period": {"type": ["number", "string"]},
        "cpu_rt_period": {"type": ["number", "string"]},
        "cpu_rt_runtime": {"type": ["number", "string"]},
        "cpus": {"type": ["number", "string"]},
        "cpuset": {"type": "string"},
        "credential_spec": {
          "type": "object",
          "properties": {
            "config": {"type": "string"},
            "file": {"type": "string"},
            "registry": {"type": "string"}
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}}
        },

        "device_cgroup_rules": {"$ref": "#/definitions/list_of_strings"},
        "devices": {"type": "array", "items": {"type": "string"}, "uniqueItems": true},
        "dns": {"$ref": "#/definitions/string_or_list"},
        "dns_opt": {"type": "array","items": {"type": "string"}, "uniqueItems": true},
        "dns_search": {"$ref": "#/definitions/string_or_list"},
        "domainname": {"type": "string"},



        "extends": {
          "deprecated": true,
          "oneOf": [
            {"type": "string"},
            {
              "type": "object",

              "properties": {
                "service": {"type": "string"},
                "file": {"type": "string"}
              },
              "required": ["service"],
              "additionalProperties": false
            }
          ]
        },
        "group_add": {
          "type": "array",
          "items": {
            "type": ["string", "number"]
          },
          "uniqueItems": true
        },
        "hostname": {"type": "string"},
        "ipc": {"type": "string"},
        "isolation": {"type": "string"},
        "labels": {"$ref": "#/definitions/list_or_dict"},
        "links": {"type": "array", "items": {"type": "string"}, "uniqueItems": true},
        "logging": {
          "type": "object",

          "properties": {
            "driver": {"type": "string"},
            "options": {
              "type": "object",
              "patternProperties": {
                "^.+$": {"type": ["string", "number", "null"]}
              }
            }
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}}
        },
        "mac_address": {"type": "string"},
        "mem_limit": {"type": ["number", "string"]},
        "mem_reservation": {"type": ["string", "integer"]},
        "mem_swappiness": {"type": "integer"},
        "memswap_limit": {"type": ["number", "string"]},
        "network_mode": {"type": "string"},
        "networks": {
          "oneOf": [
            {"$ref": "#/definitions/list_of_strings"},
            {
              "type": "object",
              "patternProperties": {
                "^[a-zA-Z0-9._-]+$": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "aliases": {"$ref": "#/definitions/list_of_strings"},
                        "ipv4_address": {"type": "string"},
                        "ipv6_address": {"type": "string"},
                        "link_local_ips": {"$ref": "#/definitions/list_of_strings"},
                        "priority": {"type": "number"}
                      },
                      "additionalProperties": false,
                      "patternProperties": {"^x-": {}}
                    },
                    {"type": "null"}
                  ]
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "oom_kill_disable": {"type": "boolean"},
        "oom_score_adj": {"type": "integer", "minimum": -1000, "maximum": 1000},
        "pid": {"type": ["string", "null"]},
        "pids_limit": {"type": ["number", "string"]},
        "platform": {"type": "string"},
        "ports": {
          "type": "array",
          "items": {
            "oneOf": [
              {"type": "number", "format": "ports"},
              {"type": "string", "format": "ports"},
              {
                "type": "object",
                "properties": {
                  "mode": {"type": "string"},
                  "host_ip": {"type": "string"},
                  "target": {"type": "integer"},
                  "published": {"type": "integer"},
                  "protocol": {"type": "string"}
                },
                "additionalProperties": false,
                "patternProperties": {"^x-": {}}
              }
            ]
          },
          "uniqueItems": true
        },
        "privileged": {"type": "boolean"},
        "profiles": {"$ref": "#/definitions/list_of_strings"},
        "pull_policy": {"type": "string", "enum": [
          "always", "never", "if_not_present", "build", "missing"
        ]},
        "read_only": {"type": "boolean"},
        "restart": {"type": "string"},
        "runtime": {
          "type": "string"
        },
        "scale": {
          "type": "integer"
        },
        "security_opt": {"type": "array", "items": {"type": "string"}, "uniqueItems": true},
        "shm_size": {"type": ["number", "string"]},
        "secrets": {
          "type": "array",
          "items": {
            "oneOf": [
              {"type": "string"},
              {
                "type": "object",
                "properties": {
                  "source": {"type": "string"},
                  "target": {"type": "string"},
                  "uid": {"type": "string"},
                  "gid": {"type": "string"},
                  "mode": {"type": "number"}
                },
                "additionalProperties": false,
                "patternProperties": {"^x-": {}}
              }
            ]
          }
        },
        "sysctls": {"$ref": "#/definitions/list_or_dict"},
        "stdin_open": {"type": "boolean"},
        "stop_grace_period": {"type": "string", "format": "duration"},
        "stop_signal": {"type": "string"},
        "storage_opt": {"type": "object"},
        "tmpfs": {"$ref": "#/definitions/string_or_list"},
        "tty": {"type": "boolean"},
        "ulimits": {
          "type": "object",
          "patternProperties": {
            "^[a-z]+$": {
              "oneOf": [
                {"type": "integer"},
                {
                  "type": "object",
                  "properties": {
                    "hard": {"type": "integer"},
                    "soft": {"type": "integer"}
                  },
                  "required": ["soft", "hard"],
                  "additionalProperties": false,
                  "patternProperties": {"^x-": {}}
                }
              ]
            }
          }
        },
        "user": {"type": "string"},
        "userns_mode": {"type": "string"},
        "volumes": {
          "type": "array",
          "items": {
            "oneOf": [
              {"type": "string"},
              {
                "type": "object",
                "required": ["type"],
                "properties": {
                  "type": {"type": "string"},
                  "source": {"type": "string"},
                  "target": {"type": "string"},
                  "read_only": {"type": "boolean"},
                  "consistency": {"type": "string"},
                  "bind": {
                    "type": "object",
                    "properties": {
                      "propagation": {"type": "string"},
                      "create_host_path": {"type": "boolean"}
                    },
                    "additionalProperties": false,
                    "patternProperties": {"^x-": {}}
                  },
                  "volume": {
                    "type": "object",
                    "properties": {
                      "nocopy": {"type": "boolean"}
                    },
                    "additionalProperties": false,
                    "patternProperties": {"^x-": {}}
                  },
                  "tmpfs": {
                    "type": "object",
                    "properties": {
                      "size": {
                        "oneOf": [
                          {"type": "integer", "minimum": 0},
                          {"type": "string"}
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {"^x-": {}}
                  }
                },
                "additionalProperties": false,
                "patternProperties": {"^x-": {}}
              }
            ]
          },
          "uniqueItems": true
        },
        "volumes_from": {
          "type": "array",
          "items": {"type": "string"},
          "uniqueItems": true
        },
        "working_dir": {"type": "string"}
      },
      "patternProperties": {"^x-": {}},
      "additionalProperties": false
    },
    "deployment": {
      "id": "#/definitions/deployment",
      "type": ["object", "null"],
      "properties": {
        "mode": {"type": "string"},
        "endpoint_mode": {"type": "string"},
        "replicas": {"type": "integer"},
        "labels": {"$ref": "#/definitions/list_or_dict"},
        "rollback_config": {
          "type": "object",
          "properties": {
            "parallelism": {"type": "integer"},
            "delay": {"type": "string", "format": "duration"},
            "failure_action": {"type": "string"},
            "monitor": {"type": "string", "format": "duration"},
            "max_failure_ratio": {"type": "number"},
            "order": {"type": "string", "enum": [
              "start-first", "stop-first"
            ]}
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}}
        },
        "update_config": {
          "type": "object",
          "properties": {
            "parallelism": {"type": "integer"},
            "delay": {"type": "string", "format": "duration"},
            "failure_action": {"type": "string"},
            "monitor": {"type": "string", "format": "duration"},
            "max_failure_ratio": {"type": "number"},
            "order": {"type": "string", "enum": [
              "start-first", "stop-first"
            ]}
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}}
        },
        "resources": {
          "type": "object",
          "properties": {
            "limits": {
              "type": "object",
              "properties": {
                "cpus": {"type": ["number", "string"]},
                "memory": {"type": "string"}
              },
              "additionalProperties": false,
              "patternProperties": {"^x-": {}}
            },
            "reservations": {
              "type": "object",
              "properties": {
                "cpus": {"type": ["number", "string"]},
                "memory": {"type": "string"},
                "generic_resources": {"$ref": "#/definitions/generic_resources"},
                "devices": {"$ref": "#/definitions/devices"}
              },
              "additionalProperties": false,
              "patternProperties": {"^x-": {}}
            }
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}}
        },
        "restart_policy": {
          "type": "object",
          "properties": {
            "condition": {"type": "string"},
            "delay": {"type": "string", "format": "duration"},
            "max_attempts": {"type": "integer"},
            "window": {"type": "string", "format": "duration"}
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}}
        },
        "placement": {
          "type": "object",
          "properties": {
            "constraints": {"type": "array", "items": {"type": "string"}},
            "preferences": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "spread": {"type": "string"}
                },
                "additionalProperties": false,
                "patternProperties": {"^x-": {}}
              }
            },
            "max_replicas_per_node": {"type": "integer"}
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}}
        }
      },
      "additionalProperties": false,
      "patternProperties": {"^x-": {}}
    },

    "generic_resources": {
      "id": "#/definitions/generic_resources",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "discrete_resource_spec": {
            "type": "object",
            "properties": {
              "kind": {"type": "string"},
              "value": {"type": "number"}
            },
            "additionalProperties": false,
            "patternProperties": {"^x-": {}}
          }
        },
        "additionalProperties": false,
        "patternProperties": {"^x-": {}}
      }
    },

    "devices": {
      "id": "#/definitions/devices",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
            "capabilities": {"$ref": "#/definitions/list_of_strings"},
            "count": {"type": ["string", "integer"]},
            "device_ids": {"$ref": "#/definitions/list_of_strings"},
            "driver":{"type": "string"},
            "options":{"$ref": "#/definitions/list_or_dict"}
          },
        "additionalProperties": false,
        "patternProperties": {"^x-": {}}
      }
    },

    "network": {
      "id": "#/definitions/network",
      "type": ["object", "null"],
      "properties": {
        "name": {"type": "string"},
        "driver": {"type": "string"},
        "driver_opts": {
          "type": "object",
          "patternProperties": {
            "^.+$": {"type": ["string", "number"]}
          }
        },
        "ipam": {
          "type": "object",
          "properties": {
            "driver": {"type": "string"},
            "config": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "subnet": {"type": "string", "format": "subnet_ip_address"},
                  "ip_range": {"type": "string"},
                  "gateway": {"type": "string"},
                  "aux_addresses": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {"^.+$": {"type": "string"}}
                  }
                },
                "additionalProperties": false,
                "patternProperties": {"^x-": {}}
              }
            },
            "options": {
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {"^.+$": {"type": "string"}}
            }
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}}
        },
        "external": {
          "type": ["boolean", "object"],
          "properties": {
            "name": {
              "deprecated": true,
              "type": "string"
            }
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}}
        },
        "internal": {"type": "boolean"},
        "enable_ipv6": {"type": "boolean"},
        "attachable": {"type": "boolean"},
        "labels": {"$ref": "#/definitions/list_or_dict"}
      },
      "additionalProperties": false,
      "patternProperties": {"^x-": {}}
    },

    "volume": {
      "id": "#/definitions/volume",
      "type": ["object", "null"],
      "properties": {
        "name": {"type": "string"},
        "driver": {"type": "string"},
        "driver_opts": {
          "type": "object",
          "patternProperties": {
            "^.+$": {"type": ["string", "number"]}
          }
        },
        "external": {
          "type": ["boolean", "object"],
          "properties": {
            "name": {
              "deprecated": true,
              "type": "string"
            }
          },
          "additionalProperties": false,
          "patternProperties": {"^x-": {}}
        },
        "labels": {"$ref": "#/definitions/list_or_dict"}
      },
      "additionalProperties": false,
      "patternProperties": {"^x-": {}}
    },

    "secret": {
      "id": "#/definitions/secret",
      "type": "object",
      "properties": {
        "name": {"type": "string"},
        "file": {"type": "string"},
        "external": {
          "type": ["boolean", "object"],
          "properties": {
            "name": {"type": "string"}
          }
        },
        "labels": {"$ref": "#/definitions/list_or_dict"},
        "driver": {"type": "string"},
        "driver_opts": {
          "type": "object",
          "patternProperties": {
            "^.+$": {"type": ["string", "number"]}
          }
        },
        "template_driver": {"type": "string"}
      },
      "additionalProperties": false,
      "patternProperties": {"^x-": {}}
    },

    "config": {
      "id": "#/definitions/config",
      "type": "object",
      "properties": {
        "name": {"type": "string"},
        "file": {"type": "string"},
        "external": {
          "type": ["boolean", "object"],
          "properties": {
            "name": {
              "deprecated": true,
              "type": "string"
            }
          }
        },
        "labels": {"$ref": "#/definitions/list_or_dict"},
        "template_driver": {"type": "string"}
      },
      "additionalProperties": false,
      "patternProperties": {"^x-": {}}
    },

    "string_or_list": {
      "oneOf": [
        {"type": "string"},
        {"$ref": "#/definitions/list_of_strings"}
      ]
    },

    "list_of_strings": {
      "type": "array",
      "items": {"type": "string"},
      "uniqueItems": true
    },

    "list_or_dict": {
      "oneOf": [
        {
          "type": "object",
          "patternProperties": {
            ".+": {
              "type": ["string", "number", "boolean", "null"]
            }
          },
          "additionalProperties": false
        },
        {"type": "array", "items": {"type": "string"}, "uniqueItems": true}
      ]
    },

    "blkio_limit": {
      "type": "object",
      "properties": {
        "path": {"type": "string"},
        "rate": {"type": ["integer", "string"]}
      },
      "additionalProperties": false
    },
    "blkio_weight": {
      "type": "object",
      "properties": {
        "path": {"type": "string"},
        "weight": {"type": "integer"}
      },
      "additionalProperties": false
    }
  }
}